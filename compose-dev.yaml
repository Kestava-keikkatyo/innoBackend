version: "3"
services:
  # Backend container
  api:
    container_name: innobackend-api
    # Set build context as current folder, use dev Dockerfile.
    build:
      context: .
      dockerfile: Dockerfile.dev
    # Bind current folder to dockerfile workdir in order to reflect local changes to container without having to build.
    volumes:
      - .:/usr/src/app
    # Create port mapping between computer port and container port.
    ports:
      - ${PORT}:${PORT}
    # Make sure that the database is created before starting the server.
    depends_on:
      - mongo

  # Mongdodb container.
  mongo:
    container_name: innobackend-mongo
    image: mongo
    restart: always
    # Persist dev database with database volume
    volumes:
      - database:/data/db

    # Basic health check
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
    #   interval: 20s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 5s

    # Use the username and password defined in .env as mongodb root user definition.
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

  # A simple mongdodb admin page container. Accessed at http://localhost:8081
  mongo-express:
    container_name: innobackend-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGODB_URI}

# Dev database volume
volumes:
  database:
